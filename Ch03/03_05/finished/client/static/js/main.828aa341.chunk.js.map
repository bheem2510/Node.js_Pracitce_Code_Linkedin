{"version":3,"sources":["ski.jpg","Dictionary.js","AddTermForm.js","hooks.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Dictionary","_ref","_ref$definitions","definitions","_ref$onRemoveTerm","onRemoveTerm","f","react_default","a","createElement","Container","map","_ref2","i","term","defined","react","key","fa","onClick","window","confirm","concat","color","size","styled","section","_templateObject","AddTermForm","_ref$onAddTerm","onAddTerm","_useState","useState","_useState2","Object","slicedToArray","setTerm","_useState3","_useState4","setDefined","name","placeholder","onChange","e","target","value","type","useSkiTerms","initialTerms","arguments","length","undefined","setDefinitions","useEffect","fetch","then","res","json","catch","console","error","addTerm","definition","method","headers","Content-Type","body","JSON","stringify","toConsumableArray","removeTerm","filter","createGlobalStyle","div","App_templateObject","render","_useSkiTerms","App_Container","src","imgSki","alt","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gSCIzB,SAASC,EAATC,GAGZ,IAAAC,EAAAD,EAFDE,mBAEC,IAAAD,EAFa,GAEbA,EAAAE,EAAAH,EADDI,oBACC,IAAAD,EADc,SAAAE,GAAC,OAAIA,GACnBF,EACD,OACEG,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UACGN,EAAYQ,IAAI,SAAAC,EAAoBC,GAApB,IAAGC,EAAHF,EAAGE,KAAMC,EAATH,EAASG,QAAT,OACfR,EAAAC,EAAAC,cAACO,EAAA,SAAD,CAAUC,IAAKJ,GACbN,EAAAC,EAAAC,cAAA,UAAKK,GACLP,EAAAC,EAAAC,cAAA,UACGM,EAAS,IACVR,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,QAAS,WAELC,OAAOC,QAAP,oCAAAC,OAAmDR,EAAnD,QAEAT,EAAaS,IAGjBS,MAAM,MACNC,KAAM,WAUtB,IAAMd,EAAYe,IAAOC,QAAVC,YClCA,SAASC,EAAT3B,GAA6C,IAAA4B,EAAA5B,EAAtB6B,iBAAsB,IAAAD,EAAV,SAAAvB,GAAC,OAAIA,GAAKuB,EAAAE,EAClCC,mBAAS,IADyBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnDjB,EADmDmB,EAAA,GAC7CG,EAD6CH,EAAA,GAAAI,EAE5BL,mBAAS,IAFmBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEnDtB,EAFmDuB,EAAA,GAE1CC,EAF0CD,EAAA,GAI1D,OACE/B,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SACE+B,KAAK,OACLC,YAAY,UACZC,SAAU,SAAAC,GAAC,OAAIP,EAAQO,EAAEC,OAAOC,QAChCA,MAAO/B,IAETP,EAAAC,EAAAC,cAAA,SACE+B,KAAK,UACLC,YAAY,gBACZC,SAAU,SAAAC,GAAC,OAAIJ,EAAWI,EAAEC,OAAOC,QACnCA,MAAO9B,IAETR,EAAAC,EAAAC,cAAA,UACEqC,KAAK,SACL3B,QAAS,WACPW,EAAU,CAAEhB,OAAMC,YAClBqB,EAAQ,IACRG,EAAW,MALf,yBClBOQ,EAAc,WAAuB,IAAtBC,EAAsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAAOlB,EACVC,mBAASgB,GADCf,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACzC5B,EADyC8B,EAAA,GAC5BmB,EAD4BnB,EAAA,GAGhDoB,oBAAU,WACRC,MAAM,eACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAKH,GACLM,MAAMC,QAAQC,QAChB,IA8BH,MAAO,CAAEzD,cAAa0D,QA5BN,SAAAC,GACdR,MAAM,cAAe,CACnBS,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAEpBP,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAtD,GAAc,IAAXa,EAAWb,EAAXa,KACPsC,EAAc,GAAA9B,OAAAY,OAAAmC,EAAA,EAAAnC,CAAK/B,GAAL,CAAkBW,OAEjC4C,MAAMC,QAAQC,QAgBYU,WAbZ,SAAAxD,GACjBwC,MAAK,eAAAhC,OAAgBR,GAAQ,CAC3BiD,OAAQ,WAEPR,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,WACJH,EACEjD,EAAYoE,OAAO,SAAAT,GAAU,OAAIA,EAAWhD,OAASA,OAGxD4C,MAAMC,QAAQC,s1BChBrBnC,IAAO+C,kBAAP,sGAQA,IAAM9D,EAAYe,IAAOgD,IAAVC,KCzBfC,iBAAOpE,EAAAC,EAAAC,cDGQ,WAAe,IAAAmE,EACiB7B,IAArC5C,EADoByE,EACpBzE,YAAa0D,EADOe,EACPf,QAASS,EADFM,EACEN,WAE9B,OACE/D,EAAAC,EAAAC,cAACoE,EAAD,KACEtE,EAAAC,EAAAC,cAAA,OAAKqE,IAAKC,IAAQC,IAAI,wBACtBzE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACT,EAAD,CAAYG,YAAaA,EAAaE,aAAciE,IACpD/D,EAAAC,EAAAC,cAACmB,EAAD,CAAaE,UAAW+B,OCXzB,MAASoB,SAASC,eAAe","file":"static/js/main.828aa341.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ski.23b3782b.jpg\";","import React, { Fragment } from \"react\";\nimport { FaTrash } from \"react-icons/fa\";\nimport styled from \"styled-components\";\n\nexport default function Dictionary({\n  definitions = [],\n  onRemoveTerm = f => f\n}) {\n  return (\n    <Container>\n      <h1>Skier Dictionary</h1>\n      <dl>\n        {definitions.map(({ term, defined }, i) => (\n          <Fragment key={i}>\n            <dt>{term}</dt>\n            <dd>\n              {defined}{\" \"}\n              <FaTrash\n                onClick={() => {\n                  if (\n                    window.confirm(`Are you sure you want to remove \"${term}\"?`)\n                  ) {\n                    onRemoveTerm(term);\n                  }\n                }}\n                color=\"red\"\n                size={10}\n              />\n            </dd>\n          </Fragment>\n        ))}\n      </dl>\n    </Container>\n  );\n}\n\nconst Container = styled.section`\n  svg {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n","import React, { useState } from \"react\";\n\nexport default function AddTermForm({ onAddTerm = f => f }) {\n  const [term, setTerm] = useState(\"\");\n  const [defined, setDefined] = useState(\"\");\n\n  return (\n    <form>\n      <input\n        name=\"term\"\n        placeholder=\"term...\"\n        onChange={e => setTerm(e.target.value)}\n        value={term}\n      />\n      <input\n        name=\"defined\"\n        placeholder=\"definition...\"\n        onChange={e => setDefined(e.target.value)}\n        value={defined}\n      />\n      <button\n        type=\"button\"\n        onClick={() => {\n          onAddTerm({ term, defined });\n          setTerm(\"\");\n          setDefined(\"\");\n        }}\n      >\n        Add Term\n      </button>\n    </form>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport const useSkiTerms = (initialTerms = []) => {\n  const [definitions, setDefinitions] = useState(initialTerms);\n\n  useEffect(() => {\n    fetch(\"/dictionary\")\n      .then(res => res.json())\n      .then(setDefinitions)\n      .catch(console.error);\n  }, []);\n\n  const addTerm = definition => {\n    fetch(\"/dictionary\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(definition)\n    })\n      .then(res => res.json())\n      .then(({ term }) => {\n        setDefinitions([...definitions, term]);\n      })\n      .catch(console.error);\n  };\n\n  const removeTerm = term => {\n    fetch(`/dictionary/${term}`, {\n      method: \"DELETE\"\n    })\n      .then(res => res.json())\n      .then(() => {\n        setDefinitions(\n          definitions.filter(definition => definition.term !== term)\n        );\n      })\n      .catch(console.error);\n  };\n\n  return { definitions, addTerm, removeTerm };\n};\n","import React from \"react\";\nimport Dictionary from \"./Dictionary\";\nimport AddTermForm from \"./AddTermForm\";\nimport { useSkiTerms } from \"./hooks\";\nimport imgSki from \"./ski.jpg\";\nimport styled from \"styled-components\";\n\nexport default function App() {\n  const { definitions, addTerm, removeTerm } = useSkiTerms();\n\n  return (\n    <Container>\n      <img src={imgSki} alt=\"skier skiing powder\" />\n      <div>\n        <Dictionary definitions={definitions} onRemoveTerm={removeTerm} />\n        <AddTermForm onAddTerm={addTerm} />\n      </div>\n    </Container>\n  );\n}\n\nstyled.createGlobalStyle = `\n  html, body {\n    margin: 0;\n    padding: 0;\n    background-color: rgb(212, 218, 240);\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  img {\n    flex-shrink: 5;\n  }\n\n  > div {\n    flex-grow: 2;\n    padding: 2em;\n\n    h1 {\n      margin: 0;\n      padding: 0;\n      font-family: Verdana;\n    }\n\n    dl {\n      font-family: Verdana;\n      dt {\n        font-weight: bold;\n        color: #006;\n      }\n      dd {\n        margin-left: 0;\n        margin-bottom: 10px;\n      }\n    }\n\n    form {\n      display: flex;\n      justify-content: space-between;\n      align-items: stretch;\n      input {\n        width: 100%;\n        margin: 0.2em;\n        font-size: 1.2em;\n        padding: 0.2em;\n        border-radius: 0.2em;\n      }\n      button {\n        flex-basis: 150px;\n        margin: 0.2em;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}