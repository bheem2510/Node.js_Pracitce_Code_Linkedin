{"version":3,"sources":["hooks.js","App.js","index.js"],"names":["useChat","wsUri","_useState","useState","_useState2","Object","slicedToArray","connected","setConnected","_useReducer","useReducer","messages","newMessages","message","concat","toConsumableArray","_useReducer2","setMessages","useEffect","window","ws","WebSocket","addEventListener","_ref","data","send","connectedStyle","backgroundColor","color","disconnectedStyle","render","react_default","a","createElement","_useChat","setMessage","refInput","useRef","current","focus","style","map","i","key","type","id","ref","value","onChange","e","target","onKeyPress","document","getElementById"],"mappings":"8JAEaA,EAAU,SAAAC,GAAS,IAAAC,EACIC,oBAAS,GADbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvBK,EADuBH,EAAA,GACZI,EADYJ,EAAA,GAAAK,EAEEC,qBAAW,SAACC,EAAUC,GAAgB,IAC7DC,EAD6DR,OAAAC,EAAA,EAAAD,CAClDO,EADkD,MAEpE,SAAAE,OAAAT,OAAAU,EAAA,EAAAV,CAAWM,GAAX,CAAqBE,KACpB,IAL2BG,EAAAX,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEvBE,EAFuBK,EAAA,GAEbC,EAFaD,EAAA,GAuB9B,OAhBAE,oBAAU,WACRC,OAAOC,GAAK,IAAIC,UAAUpB,GAE1BkB,OAAOC,GAAGE,iBAAiB,OAAQ,WACjCd,GAAa,KAGfW,OAAOC,GAAGE,iBAAiB,QAAS,WAClCd,GAAa,KAGfW,OAAOC,GAAGE,iBAAiB,UAAW,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACvCP,EAAW,GAAAH,OAAAT,OAAAU,EAAA,EAAAV,CAAKM,GAAL,CAAea,QAE3B,IAEI,CACLjB,YACAI,WACAc,KAAM,SAAAZ,GACJM,OAAOC,GAAGK,KAAKZ,MCzBfa,SAAiB,CACrBC,gBAAiB,QACjBC,MAAO,SAGHC,EAAoB,CACxBF,gBAAiB,MACjBC,MAAO,UCPTE,iBAAOC,EAAAC,EAAAC,cDUQ,WAAe,IAAAC,EACUlC,EAAQ,uBAAtCO,EADoB2B,EACpB3B,UAAWI,EADSuB,EACTvB,SAAUc,EADDS,EACCT,KADDvB,EAEEC,mBAAS,IAFXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAErBW,EAFqBT,EAAA,GAEZ+B,EAFY/B,EAAA,GAGtBgC,EAAWC,iBAAO,MAMxB,OAJAnB,oBAAU,WACRkB,EAASE,QAAQC,UAIjBR,EAAAC,EAAAC,cAAA,OAAKO,MAAOjC,EAAYmB,EAAiBG,GACvCE,EAAAC,EAAAC,cAAA,UAAK1B,EAAY,YAAc,gBAC/BwB,EAAAC,EAAAC,cAAA,WACGtB,EAAS8B,IAAI,SAAC5B,EAAS6B,GAAV,OACZX,EAAAC,EAAAC,cAAA,KAAGU,IAAKD,GAAI7B,MAGhBkB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,SACEW,KAAK,OACLC,GAAG,UACHC,IAAKV,EACLW,MAAOlC,EACPmC,SAAU,SAAAC,GAAC,OAAId,EAAWc,EAAEC,OAAOH,QACnCI,WAAY,SAAAF,GACI,UAAVA,EAAEN,MACJlB,EAAKZ,GACLsB,EAAW,WCtClB,MAASiB,SAASC,eAAe","file":"static/js/main.5b3598c6.chunk.js","sourcesContent":["import { useEffect, useState, useReducer } from \"react\";\n\nexport const useChat = wsUri => {\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useReducer((messages, newMessages) => {\n    const [message] = newMessages;\n    return [...messages, message];\n  }, []);\n\n  useEffect(() => {\n    window.ws = new WebSocket(wsUri);\n\n    window.ws.addEventListener(\"open\", () => {\n      setConnected(true);\n    });\n\n    window.ws.addEventListener(\"close\", () => {\n      setConnected(false);\n    });\n\n    window.ws.addEventListener(\"message\", ({ data }) => {\n      setMessages([...messages, data]);\n    });\n  }, []);\n\n  return {\n    connected,\n    messages,\n    send: message => {\n      window.ws.send(message);\n    }\n  };\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useChat } from \"./hooks\";\nimport \"./App.css\";\n\nconst connectedStyle = {\n  backgroundColor: \"black\",\n  color: \"#0F0\"\n};\n\nconst disconnectedStyle = {\n  backgroundColor: \"red\",\n  color: \"yellow\"\n};\n\nexport default function App() {\n  const { connected, messages, send } = useChat(\"ws://localhost:3000\");\n  const [message, setMessage] = useState(\"\");\n  const refInput = useRef(null);\n\n  useEffect(() => {\n    refInput.current.focus();\n  });\n\n  return (\n    <div style={connected ? connectedStyle : disconnectedStyle}>\n      <h1>{connected ? \"Connected\" : \"Disconnected\"}</h1>\n      <div>\n        {messages.map((message, i) => (\n          <p key={i}>{message}</p>\n        ))}\n      </div>\n      <span>\n        <label>&gt;</label>\n        <input\n          type=\"text\"\n          id=\"message\"\n          ref={refInput}\n          value={message}\n          onChange={e => setMessage(e.target.value)}\n          onKeyPress={e => {\n            if (e.key === \"Enter\") {\n              send(message);\n              setMessage(\"\");\n            }\n          }}\n        />\n      </span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}